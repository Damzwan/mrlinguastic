# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type BasicVoclist {
    _id: ID!
    creator: String!
    lastEdited: String!
    settings: VoclistSettings!
    wordsLength: Int!
}

type Group {
    _id: ID!
    description: String
    members: [User!]
    name: String!
    voclists: [BasicVoclist!]
}

type LangSettings {
    fromLang: String!
    toLang: String!
    toVoice: String!
}

type Mutation {
    addSharedVoclist(userId: String!, vocId: String!): Boolean
    addUserToGroup(groupId: String!, lastUpdated: String!, userId: String!): String
    addVoclistToGroup(groupId: String!, vocId: String!): Boolean
    changeProfilePic(lastUpdated: String!, newImg: String!, userId: String!): Boolean
    copyImgs(imgs: [String]): [String]
    copyVoclist(lastUpdated: String!, userId: String!, voclistId: String!): Voclist
    createGroup(groupInfo: GroupInput!, lastUpdated: String!, userId: String!): String
    deleteVoclist(lastUpdated: String!, userId: String!, vocId: String!): Boolean
    removeImgs(imgs: [String!]): Boolean
    removeUserFromGroup(groupId: String!, lastUpdated: String!, userId: String!): Boolean
    removeVoclistFromGroup(groupId: String!, vocId: String!): Boolean
    saveImg(img: String!): String!
    updateVoclist(changedBlobs: [String!], lastUpdated: String!, list: VoclistInput!, oid: String!): Boolean
}

type Query {
    getExamples(from: String!, fromLang: String!, to: String, toLang: String!): [Sentence!]
    getImages(lang: String!, word: String!): [String!]
    getVoices: [Voice]
    group(groupId: String!): Group
    lastUpdated(oid: String!): String!
    translateWord(fromLang: String!, toLang: String!, word: String!): [String]
    translateWords(fromLang: String!, toLang: String!, words: [String!]): [String]
    user(oid: String!): User
    voclist(voclistId: String!): Voclist
    words(voclistId: String!): [Word!]
}

type Sentence {
    from: String!
    to: [String!]
}

type User {
    _id: ID!
    groups: [Group!]
    lastUpdated: String
    profilePic: String
    voclists: [BasicVoclist!]
}

type Voclist {
    _id: ID!
    creator: String
    lastEdited: String
    settings: VoclistSettings
    words: [Word!]
}

type VoclistSettings {
    description: String
    langSettings: LangSettings!
    title: String!
}

type Voice {
    DisplayName: String
    Gender: String
    ShortName: String
}

type Word {
    from: String!
    img: String
    sentences: [Sentence!]
    to: String!
    toAudio: String
}

enum CacheControlScope {
    PRIVATE
    PUBLIC
}

enum Collections {
    Groups
    Users
    Voclists
}

input AdditionalEntityFields {
    path: String
    type: String
}

input GroupInput {
    description: String!
    name: String!
}

input LangSettingsInput {
    fromLang: String!
    toLang: String!
    toVoice: String!
}

input SentenceInput {
    from: String!
    to: [String!]
}

input UserInput {
    username: String!
}

input VoclistInput {
    _id: ID!
    creator: String
    lastEdited: String
    settings: VoclistSettingsInput!
    words: [WordInput!]
}

input VoclistSettingsInput {
    description: String
    langSettings: LangSettingsInput!
    title: String!
}

input WordInput {
    from: String!
    img: String
    sentences: [SentenceInput!]
    to: String!
    toAudio: String
}


"The `Upload` scalar type represents a file upload."
scalar Upload